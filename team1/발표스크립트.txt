안녕하십니까
다중 ROI 분석을 이용한 비전 기반 면봉 카운터에 대한 발표를 맡은 3조 안승찬입니다.
저희 조의 핵심 기술은 다중 ROI 분석입니다.
이에 대해서는 뒤에서 더 자세히 설명드리겠습니다.
목차는 다음과 같습니다.(일초)
저희의 알고리즘에 대해 설명드리기 전에 결과적으로 채택하지 않은 사안에 대해 말씀드리겠습니다.

먼저 정규분포입니다.
컨투어에리어를 이용해
컨투어로 둘러쌓인 부분의 면적이 
평균으로부터 몇 표준편차만큼 떨어져 있는지를 확인하는 방법입니다.
이 방법에는 원의 중심의 좌표가 부정확한 문제점과 밀도, 밝기가 높은 부분에서 검출률의 신뢰성 문제가 있었습니다.
다음은 영역별 문턱값 처리입니다.
이미지의 중앙을 원의중심으로 하는 여러 동심원을 서로 다른 문턱값을 적용해 이진화하는 방법입니다.
이 방법은 이미지의 특성이 영역별로 다른 경우에 유용하지만, 저희가 예상하기로 광원의 위치가 달라 해결하기 어려웠다고 판단해 채택하지 않았습니다.
다음은 트랙바를 이용한 원 검출입니다.
사실 이 과정은 뒤에서 설명드릴 원 검출 기법의 파라미터를 트랙바로 조절해 최적의 파라미터를 찾는 과정입니다.
단순히 한 이미지만을 비교했던 방법이므로 적합하지 않다고 생각했습니다.
호를 이용한 원 검출입니다.
아래에 나와있는 방법과 이 식을 바탕으로 호를 찾아 원을 검출해내는 방법입니다.
하지만 이 방법은 면봉의 크기가 너무 작고 밀도가 높아 원을 그리는 단계에서 오류가 많아 적합하지 않았습니다.

이제 저희 알고리즘을 간단히 표현한 흐름도를 보여드리겠습니다.
이중에서 마스킹과 ROI, 여러 가지 전처리 과정이 핵심이라고 보시면 되겠습니다.
먼저 ROI 세분화에 대해 말씀드리겠습니다.
앞에서 저희 조의 핵심 기술을 다중 ROI 분석이라고 했는데, 바로 이 과정이라고 보시면 되겠습니다.
먼저 ROI란, Region of Interest의 약자로 관심영역을 의미합니다.
저희는 이 관심영역을 이미지 전체로 하지 않고, 부분적으로 ROI를 설정해봤습니다.
이 방법은 한 이미지에도 부분적으로 밝기와 밀도에 있어서 차이가 나기 때문에 이 오차를 최대한 줄이고자 선택한 방법입니다.
이 사진은 처음 구상단계에서 나왔던 두 가지 안입니다.
(설명)
이렇게 된다면 면봉이 ROI마다 잘리면서 카운팅되지 않는 오류를 모두 줄일 수 있게 되어,
최종적으로 2안을 선택하게 되었습니다.
저희가 사용한 코드와 ROI 세분화 이미지입니다.
오버랩 변수를 이용해서 간격을 설정하여 ROI 이미지와 시작 좌표를 리스트에 담았습니다.
사진에서 보실 수 있다시피 첫 번째 ROI에서 잘리는 면봉을 다음 ROI에서는 포함하고 있는 것을 확인할 수 있습니다.
이를 코드 작업 중 확인하기 위해 
다음과 같은 창을 띄워 나누어진 ROI를 시각화하였습니다.
보시는 바와 같이 이 ROI를 모아보면 안 맞는 부분이 보이는데 모두 오버랩을 이용한 결과라고 보시면 될 것 같습니다.

다음은 면봉통 외각 검출 및 마스킹입니다.
면봉통 외각의 이미지가 바닥과 빛 등의 이유로 원이 오검출되는 부분이 있었습니다.
이를 고려해 간단한 전처리와 컨투어를 이용해 면봉통을 찾아내고, 이를 마스킹 처리하였습니다.

이제 전처리 과정을 설명드리겠습니다.
그 전에 전처리의 주요 기능을 하는 함수에 대해 간략히 설명드리겠습니다.
V마스크입니다.
HSV 중 V채널의 히스토그램을 계산해 면봉 영역을 나타내는 범위를 설정하고 그중 가장 높은 부분을 출력하게 했습니다.
밝기 측정함수입니다.
V채널을 사용해 V값이 특정값 이상인 경우를 모아 이를 평균을 내는 방식입니다.
다음은 CLAHE함수입니다.
정확히는 이미지의 평균 밝기에 따라 적응적으로 CLAHE를 적용하는 함수입니다.
이는 이미지를 더 선명하게 하기 위한 히스토그램 평활화와 비슷한 방법입니다.
먼저 이미지를 타일로 나누고, 각 타일에서 히스토그램을 계산한 뒤 클리핑을 통해 대비를 향상시킵니다.
이후 타일 경계에서 보간을 이용해 연결합니다.
이 과정에서 밝기 정보를 사용하기 위해 LAB색상 공간으로 변환하여 L 정보를 CLAHE에 적용합니다.

이제 전처리 함수에 대해 말씀드리겠습니다.
저희는 총 3가지 전처리 함수가 있습니다.
그중 첫 번째를 살펴보면
V마스크
2
V마스크 후 CLAHE
3
CLAHE 후 V마스크

앞서 보신바와 같이 저희는 세 가지 전처리 함수가 있습니다.
저희는 이 세 가지 전처리를 모두 적용하는 것이 아닌 최적의 전처리 함수를 찾아 적용하는 방식을 선택했습니다.
전처리 함수 별로 각각 다른 원 검출을 시도해
가장 많은 원을 검출했던 하나의 전처리 과정을 택하여 해당 ROI에 적용시키는 방법입니다.
이는 세부 ROI마다 이미지의 특징이 달라 가장 적절한 전처리를 하기 위한 방법입니다.
이 과정 중 지나치게 많은 오검출이 있는 경우를 제외하는 코드도 추가했습니다.

이제 면봉 검출 함수에 대해 말씀드리겠습니다.
저희는 허프 변환을 이용한 원 검출, 특히 허프 그래디언트 방법에 대해 설명드리겠습니다.
일반적으로 원의 방정식을 살펴보면,
원의 중심의 좌표 두개와 반지름
총 세 개의 파라미터가 필요합니다.
여기서 일반적인 허프 변환을 적용하면 두 가지 문제점이 발생하게 됩니다.
바로 많은 메모리가 필요하고, 연산량이 매우 큽니다.
검출 시간은 본 과제에서의 평가 요소로
문제가 되기에 저희는 허프 그래디언트 방법을 사용하게 되었습니다.
여기서 그래디언트는 순간변화율을 의미합니다.
핵심 원리에 대해 설명드리겠습니다.
원의 엣지에서 그래디언트 방향은 항상 원의 중심을 향하기 때문에
엣지와 그래디언트의 방향은 항상 수직입니다.
이 특성을 이용해 원의 중심을 더 효과적으로 찾을 수 있기 때문에 이 허프 그래디언트 방법을 채택하게 되었습니다.

역할분담입니다.
팀장인 저를 중심으로 모두가 소스 개발에 참여했고,
저희 조는 다른 조에 비해 인원이 더 많아 분업을 잘 수행했습니다.

프로젝트 진행과정을 정리한 노션을 보여드리면서 발표 마치겠습니다.
감사합니다.